# Uses actions/cache/restore which only restores cache / does not create one
# Caches are saved with cache.yml that runs in the main branch
# Only caches in the main branch are accessible in dev branches

name: Playwright UI Tests

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    # Client npm dependencies -----------------------

    - name: Restore client node_modules
      uses: actions/cache/restore@v4
      id: client-node-modules-cache
      with:
        path: ./client/node_modules
        key: ${{ runner.os }}-${{ runner.arch }}-client-node-modules-${{ hashFiles('client/package-lock.json') }}

    - name: Install client dependencies
      if: steps.client-node-modules-cache.outputs.cache-hit != 'true'
      run: cd client && npm ci
      shell: bash

    # Root npm dependencies ------------------------

    # playwright is a dependency added to root package.json
    # Remove "version" from the root and "" package block, then compute SHA256 hash
    # Because we bump root package.json and dont want to lose existing valid caches
    - name: Compute hash after modifying package-lock.json
      run: |
        HASH=$(jq 'del(.version) | del(.packages[""].version)' package-lock.json | sha256sum | awk '{ print $1 }')
        echo "Computed Hash: $HASH"
        echo "HASH=$HASH" >> $GITHUB_ENV
      shell: bash

    - name: Cache node_modules
      uses: actions/cache/restore@v4
      id: root-node-modules-cache
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ runner.arch }}-root-node-modules-${{ env.HASH }}
      
    - run: npm ci --ignore-scripts # Just install packages at root, skips postinstall scripts with --ignore-scripts flag
      if: steps.root-node-modules-cache.outputs.cache-hit != 'true'
      shell: bash

    # Playwright -----------------------------------

    - name: Get installed Playwright version
      id: playwright-version
      run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages['node_modules/@playwright/test'].version)")" >> $GITHUB_ENV
      shell: bash

    - name: Restore Playwright binaries
      uses: actions/cache/restore@v4
      id: playwright-cache 
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-${{ runner.arch }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

    - name: Install Playwright Browsers
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps chromium
      shell: bash

    # Test suite run --------------------------------

    - name: Run Playwright UI tests
      run: npm run test:web
      shell: bash