# Uses actions/cache/restore which only restores cache / does not create one
# Caches are saved with cache.yml that runs in the main branch
# Only caches in the main branch are accessible in dev branches

name: Fastify API Tests

inputs:
  VAULT_JS_B64:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    # Server npm dependencies ----------------------

    - name: Restore server node_modules
      uses: actions/cache/restore@v4
      id: server-node-modules-cache
      with:
        path: ./svr/node_modules
        key: ${{ runner.os }}-${{ runner.arch }}-svr-node-modules-${{ hashFiles('svr/package-lock.json') }}
    
    - name: Install server dependencies
      if: steps.server-node-modules-cache.outputs.cache-hit != 'true'
      run: cd svr && npm ci
      shell: bash

    # Docker node image ----------------------------

    - name: Cache Node.js Docker Image
      id: cache-node-image
      uses: actions/cache/restore@v4
      with:
        path: ./node-docker-image.tar
        key: ${{ runner.os }}-${{ runner.arch }}-docker-node-18-alpine    

    - name: Load Docker image from cache
      if: steps.cache-node-image.outputs.cache-hit == 'true'
      run: docker load < ./node-docker-image.tar
      shell: bash

    - name: Pull Docker image
      if: steps.cache-node-image.outputs.cache-hit != 'true'
      run: docker pull node:18-alpine
      shell: bash

    # Docker dynamodb image ------------------------

    - name: Cache DynamoDB Docker Image
      id: cache-dynamodb-image
      uses: actions/cache/restore@v4
      with:
        path: ./dynamodb-docker-image.tar
        key: ${{ runner.os }}-${{ runner.arch }}-docker-amazon-dynamodb-local

    - name: Load Docker image from cache
      if: steps.cache-dynamodb-image.outputs.cache-hit == 'true'
      run: docker load < ./dynamodb-docker-image.tar
      shell: bash

    - name: Pull Docker image
      if: steps.cache-dynamodb-image.outputs.cache-hit != 'true'
      run: docker pull amazon/dynamodb-local
      shell: bash

    # Test suite run --------------------------------

    - name: Get vault
      run:  echo "${{ inputs.VAULT_JS_B64 }}" | base64 --decode > svr/vault.js
      shell: bash

    - name: Run Fastify API tests
      run: npm run test:svr:ci
      shell: bash